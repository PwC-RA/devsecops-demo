name: Security CI

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      usePR:
        description: 'if use pr to scan'
        required: true
        default: false
        type: boolean
      prAuth:
        description: 'PR Auth Token. if usePR is true, it is required.'
        required: false
        type: string

jobs:
  sast:
    name: SAST with SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: sast
        shell: bash
        run: echo "start sast scan..."

  iac-scan:
    name: IaC Scan
    runs-on: ubuntu-latest
    steps:
    - name: Run Trivy vulnerability scanner in IaC mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        hide-progress: true
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'
  
  sca:
    name: SCA
    runs-on: ubuntu-latest
    steps:
    - name: Use PR to run sca
      shell: bash
      run: |
        echo ""
        curl --location --request POST 'http://ec2-52-80-243-115.cn-north-1.compute.amazonaws.com.cn:30080/prod-api/osp/repo_history/add' \
        --header 'Authorization: ${{ inputs.prAuth }}' \
        --header 'Accept: */*' \
        --header 'Content-Type: multipart/form-data' \
        --form 'branch="main"' \
        --form 'repoId="11"'

  build-and-scan:
    name: Build & Scan Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build an image from Dockerfile
      run: |
        docker build -t docker.io/pwc-ra/devsecops-demo:${{ github.sha }} .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/pwc-ra/devsecops-demo:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
  
  deploy-test:
    name: Deploy to TEST env
    runs-on: ubuntu-latest
    needs: build-and-scan
    steps:
    - name: deploy
      shell: bash
      run: echo "deploy"
  
  dast:
    name: DAST with ZAP
    runs-on: ubuntu-latest
    needs: deploy-test
    steps:
    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.14.0
      with:
        target: 'http://ec2-52-80-243-115.cn-north-1.compute.amazonaws.com.cn:30080'

